@use "../abstracts/mixins" as mxn;
@use "../abstracts/variables" as var;

.form {

  &--auth {

    display: flex;
    flex-direction: column;
    align-items: start;
    gap: var.$spacing-m;
  }

  &--signup {
    display: grid;
    grid-template-columns: [form-start] repeat(2, [col-start] max-content [col-start]) [form-end];
    grid-template-rows: repeat(4, [row-start] min-content);
    column-gap: var.$spacing-s;
    row-gap: var.$spacing-m;

    justify-self: center;
    margin: var.$spacing-4xl 0;

    &__email {
      grid-column: form;
      grid-row: row-start 1 / span 1;
    }

    &__password, &__confirm-password {
      grid-row: row-start 2 / span 1;
    }

    &__password {
      grid-column: col-start 1 / span 1;
    }

    &__password-confirm {
      grid-column: col-start 2 / span 1;
    }

    &__first-name, &__last-name {
      grid-row: row-start 3 / span 1;
    }

    &__first-name {
      grid-column: col-start 1 / span 1;
    }

    &__last-name {
      grid-column: col-start 2 / span 1;
    }

    &__submit {
      grid-column: form;
      grid-row: row-start 4 / span 1;
    }

    @include mxn.media(phone-sm) {
      grid-template-columns: [form-start] repeat(2, [col-start] 1fr [col-start]) [form-end];
      justify-self: stretch;
    }

    @include mxn.media(phone-xs) {
      display: flex;
      flex-direction: column;
      gap: var.$spacing-m;
    }
  }

  &--admin {
    grid-column: col-start 3 /  span 8;
    display: flex;
    flex-direction: column;
    gap: var.$spacing-3xl;
  }

  &__group {
    display: flex;
    flex-direction: column;
    gap: var.$spacing-s;
  }

  &__admin-group {
    display: grid;

    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    column-gap: var.$spacing-xl;
    row-gap: var.$spacing-l;
  }

  &__label {
    font-size: var.$fs-xs;
    font-weight: var.$weight-bold;
    margin-left: var.$spacing-m;
    margin-top: -1.15rem;
    padding: 0 var.$spacing-xs;
    background-color: #fff;
    display: block;
    width: fit-content;
    transition: all 300ms;
    cursor: pointer;
  }


  &__input {
    font-family: inherit;
    font-size: var.$fs-m;
    width: 100%;
    padding: var.$spacing-s var.$spacing-m;
    border-radius: 2rem;
    background-color: #fff;
    border: 2px solid var.$color-grey-light-2;
    display: block;
    transition: all 300ms;
    //box-shadow: 0 1rem 2rem rgba(#000, .1);

    &:focus {
      outline: none;
      //box-shadow: 0 1rem 2rem rgba(#000, .1);
      border-color: var.$color-grey-dark-2;

      &:valid {
        border-color: var.$color-success;
      }

      &:invalid {
        border-color: var.$color-danger;
      }
    }
  }

  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__select {
    font-family: inherit;
    font-size: var.$fs-m;
    padding: var.$spacing-s var.$spacing-m;
    border-radius: 2px;
    background-color: #fff;
    border: none;
    border-bottom: 3px solid transparent;
    display: block;
    transition: all 300ms;
    box-shadow: 0 1rem 2rem rgba(#000, .1);

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba(#000, .1);
      border-bottom: 3px solid var.$color-success;
    }

    &:focus:invalid {
      border-bottom: 3px solid var.$color-danger;
    }
  }

  &__checkbox-group {
    display: flex;
    align-items: center;
    gap: var.$spacing-s;
  }


  &__checkbox {
    /* width: 2rem;
     height: 2rem;
     appearance: none;
     background-color: var.$color-grey-light-1;
     border-radius: 2px;
     cursor: pointer;
     transition: all 300ms;
     border: none;
     outline: none;
     
     &:checked {
       background-color: var.$color-primary-medium;
     }*/
  }

}