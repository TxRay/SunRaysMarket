@using Application.Utilities
@using WebClient.Enums
@using System.Diagnostics
@rendermode InteractiveAuto

<p class="price @ClassNames.Trim()" style="--flex-direction: @FlexDirection;">
    @if (IsRegularPrice)
    {
        <span class="price__amount--regular">@FormatHelpers.ToCurrencyString(RegularPrice)</span>
    }
    else
    {
        <span class="price__amount--sale">
            @FormatHelpers.ToCurrencyString(SalePrice)
        </span>
        <span class="price__amount--regular-strike">@FormatHelpers.ToCurrencyString(RegularPrice)</span>
    }
</p>

@code {
    [Parameter, EditorRequired] public float RegularPrice { get; set; }
    [Parameter, EditorRequired] public float DiscountPercent { get; set; }
    [Parameter] public string ClassNames { get; set; } = string.Empty;
    [Parameter] 
    public SalePriceDisplayOrientation SalePriceOrientation { get; set; } = SalePriceDisplayOrientation.Row;

    private bool IsRegularPrice => DiscountPercent == 0;
    private float SalePrice => RegularPrice * (1 - DiscountPercent);

    private string FlexDirection => SalePriceOrientation switch
    {
        SalePriceDisplayOrientation.Row => "row",
        SalePriceDisplayOrientation.Column => "column",
        _ => throw new InvalidOperationException()
    };


}