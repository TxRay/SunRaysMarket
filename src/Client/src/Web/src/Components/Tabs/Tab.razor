@rendermode @(new InteractiveWebAssemblyRenderMode(false))

@if (Tabs!.IsCurrentTab(Label) && Tabs.TabsLoaded)
{
    <div class="tab-content">
        @ChildContent
    </div>
}

@code {

    [Inject] ILogger<Tab>? Logger { get; set; }

    [CascadingParameter] private Tabs? Tabs { get; set; }

    [Parameter] [EditorRequired] public string Label { get; set; } = null!;

    [Parameter] public RenderFragment? ChildContent { get; set; }


    protected override void OnInitialized()
    {
        if (Tabs is null)
            throw new InvalidOperationException("TimeSlotTab must be placed inside a Tabs component");

        Tabs.AddTab(this);
    }

}