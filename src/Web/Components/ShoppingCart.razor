@using Application.DomainModels
@using Application.Services
@using Application.UnitOfWork
@using Application.Utilities
@using Web.Cookies
@inject IUnitOfWork UnitOfWork
@inject ICustomerService CustomerService

<Modal ContentClasses="cart">
    <ModalCloseButton />
    <h3 class="cart-title">Shopping Cart</h3>
    <div class="cart__item-display">
        @foreach (var item in CartItems)
        {
            <CartItem Model="@item" />
        }
    </div>
</Modal>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }
    
    private IEnumerable<CartItemListModel> CartItems { get; set; } = new List<CartItemListModel>();

    protected override async Task OnInitializedAsync()
    {
           var cartId = (HttpContext?.User.IsAuthenticated() ?? false) ?
            await CustomerService.GetCustomerCartIdAsync(HttpContext!.User) :
            HttpContext!.Request.Cookies.GetCartIdCookie();
        
        if(cartId is not null)
            CartItems = await UnitOfWork.CartRepository.GetCartItemsAsync(cartId.Value);
    }
}